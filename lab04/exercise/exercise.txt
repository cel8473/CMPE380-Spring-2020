Program : 0x4005ad
Static data : 0x601060
Ram data : 0x6010a0
Heap data : 0x1ca5010
Stack data: 0x7ffc7b8c8900

Passing the 2x function a 2, I got 4
Passing the 3x function a 2, I got 6
Stack data values before free : 1 'Stack'
Heap data values before free : 2 'Pointer'
Heap data values after free : 0 ''

==21653== Memcheck, a memory error detector
==21653== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21653== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==21653== Command: ./lab_a
==21653== 
==21653== Invalid read of size 4
==21653==    at 0x400704: main (lab_a.c:64)
==21653==  Address 0x5203040 is 0 bytes inside a block of size 44 free'd
==21653==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21653==    by 0x400700: main (lab_a.c:62)
==21653==  Block was alloc'd at
==21653==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21653==    by 0x4005BC: main (lab_a.c:36)
==21653== 
==21653== Invalid read of size 1
==21653==    at 0x4E82EF9: vfprintf (in /usr/lib64/libc-2.17.so)
==21653==    by 0x4E89328: printf (in /usr/lib64/libc-2.17.so)
==21653==    by 0x400715: main (lab_a.c:64)
==21653==  Address 0x5203044 is 4 bytes inside a block of size 44 free'd
==21653==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21653==    by 0x400700: main (lab_a.c:62)
==21653==  Block was alloc'd at
==21653==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21653==    by 0x4005BC: main (lab_a.c:36)
==21653== 
==21653== Invalid read of size 1
==21653==    at 0x4C30A48: __GI_mempcpy (vg_replace_strmem.c:1525)
==21653==    by 0x4EB07C4: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib64/libc-2.17.so)
==21653==    by 0x4E82EB2: vfprintf (in /usr/lib64/libc-2.17.so)
==21653==    by 0x4E89328: printf (in /usr/lib64/libc-2.17.so)
==21653==    by 0x400715: main (lab_a.c:64)
==21653==  Address 0x5203044 is 4 bytes inside a block of size 44 free'd
==21653==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21653==    by 0x400700: main (lab_a.c:62)
==21653==  Block was alloc'd at
==21653==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21653==    by 0x4005BC: main (lab_a.c:36)
==21653== 
==21653== Invalid read of size 1
==21653==    at 0x4C30A56: __GI_mempcpy (vg_replace_strmem.c:1525)
==21653==    by 0x4EB07C4: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib64/libc-2.17.so)
==21653==    by 0x4E82EB2: vfprintf (in /usr/lib64/libc-2.17.so)
==21653==    by 0x4E89328: printf (in /usr/lib64/libc-2.17.so)
==21653==    by 0x400715: main (lab_a.c:64)
==21653==  Address 0x5203046 is 6 bytes inside a block of size 44 free'd
==21653==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21653==    by 0x400700: main (lab_a.c:62)
==21653==  Block was alloc'd at
==21653==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21653==    by 0x4005BC: main (lab_a.c:36)
==21653== 
Program : 0x4005ad
Static data : 0x601060
Ram data : 0x6010a0
Heap data : 0x5203040
Stack data: 0x1ffefff630

Passing the 2x function a 2, I got 4
Passing the 3x function a 2, I got 6
Stack data values before free : 1 'Stack'
Heap data values before free : 2 'Pointer'
Heap data values after free : 2 'Pointer'
==21653== 
==21653== HEAP SUMMARY:
==21653==     in use at exit: 0 bytes in 0 blocks
==21653==   total heap usage: 1 allocs, 1 frees, 44 bytes allocated
==21653== 
==21653== All heap blocks were freed -- no leaks are possible
==21653== 
==21653== For counts of detected and suppressed errors, rerun with: -v
==21653== ERROR SUMMARY: 16 errors from 4 contexts (suppressed: 0 from 0)

There are no memory leaks. There are 16 errors from 4 contexts because
we are trying to use data that has been freed.

==26320== Memcheck, a memory error detector
==26320== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==26320== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==26320== Command: ./lab_a
==26320== 
==26320== Invalid read of size 4
==26320==    at 0x400701: main (lab_a.c:64)
==26320==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==26320== 
==26320== 
==26320== Process terminating with default action of signal 11 (SIGSEGV)
==26320==  Access not within mapped region at address 0x0
==26320==    at 0x400701: main (lab_a.c:64)
==26320==  If you believe this happened as a result of a stack
==26320==  overflow in your program's main thread (unlikely but
==26320==  possible), you can try to increase the size of the
==26320==  main thread stack using the --main-stacksize= flag.
==26320==  The main thread stack size used in this run was 8388608.
Program : 0x4005ad
Static data : 0x601060
Ram data : 0x6010a0
Heap data : 0x5203040
Stack data: 0x1ffefff640

Passing the 2x function a 2, I got 4
Passing the 3x function a 2, I got 6
Stack data values before free : 1 'Stack'
Heap data values before free : 2 'Pointer'
==26320== 
==26320== HEAP SUMMARY:
==26320==     in use at exit: 0 bytes in 0 blocks
==26320==   total heap usage: 1 allocs, 1 frees, 44 bytes allocated
==26320== 
==26320== All heap blocks were freed -- no leaks are possible
==26320== 
==26320== For counts of detected and suppressed errors, rerun with: -v
==26320== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

This time the only error is when you are trying to access data that is set
to null during the print statment.
