
Division test
-0.031250 -8192 -8192 -0.031250 -0.031250
-0.015625 -4096 -4096 -0.015625 -0.015625
-0.007812 -2048 -2048 -0.007812 -0.007812
-0.003906 -1024 -1024 -0.003906 -0.003906
-0.001953 -512 -512 -0.001953 -0.001953
-0.000977 -256 -256 -0.000977 -0.000977
-0.000488 -128 -128 -0.000488 -0.000488
-0.000244 -64 -64 -0.000244 -0.000244
-0.000122 -32 -32 -0.000122 -0.000122
-0.000061 -16 -16 -0.000061 -0.000061
-0.000031 -8 -8 -0.000031 -0.000031
-0.000015 -4 -4 -0.000015 -0.000015
-0.000008 -2 -2 -0.000008 -0.000008
-0.000004 -1 -1 -0.000004 -0.000004
-0.000002 0 0 0.000000 0.000000

Division Absolute Value Test
0.031250 8192 8192 0.031250 0.031250
0.015625 4096 4096 0.015625 0.015625
0.007812 2048 2048 0.007812 0.007812
0.003906 1024 1024 0.003906 0.003906
0.001953 512 512 0.001953 0.001953
0.000977 256 256 0.000977 0.000977
0.000488 128 128 0.000488 0.000488
0.000244 64 64 0.000244 0.000244
0.000122 32 32 0.000122 0.000122
0.000061 16 16 0.000061 0.000061
0.000031 8 8 0.000031 0.000031
0.000015 4 4 0.000015 0.000015
0.000008 2 2 0.000008 0.000008
0.000004 1 1 0.000004 0.000004
0.000002 0 0 0.000000 0.000000

Multiplication test
Product = 48.414375 float, Qnx product = 12673152 dec, converted back 48.344238 float

Complex calculations test
The resulting value of the decimal equation: -674.932500
The resulting value of the fraction equation: -675.000100
The resulting value of the Qn equation: -675.000122

Performance test
Clock ticks for time1 is 400000 and time2 is 350000
Time2/Qn was faster than Time1/Floating point for addition
Clock ticks for time1 is 330000 and time2 is 420000
Time1/Floating point was faster than Time2/Qn for multiplication

No I had not problems with Qn_DIVIDE(). The integer division works 
because .... No problems with print absolute values. Yes there was 
some data loss, it was off by a little bit. Some implementation issues
with the shifting. The result is pretty close to floating-point.
Qn was faster than float for the addition because it was just integer
addition which is faster than float addition. Float was faster
than Qn for the multiplication because there is no shifting in
float multiplication.
